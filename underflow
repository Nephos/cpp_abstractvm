 @WildThing All five basic IEEE 754 operations except sqrt (that is, +, -, *, /) can cause underflow. They cause underflow each time the mathematical result would be between -DBL_MIN*(1-DBL_EPSILON/4) and DBL_MIN*(1-DBL_EPSILON/4) (give or take a fraction of an ULP). –  Pascal Cuoq Jul 12 '13 at 9:30

----------

 Although DBL_MIN/2 underflows, this underflow is dismissed (is not flagged and effectively never exists) if default underflow handling is enabled, because the result is exact. In the default mode, exact results never underflow. In contrast, DBL_MIN/3 or DBL_MIN/(2./3) would always raise the underflow flag. –  Eric Postpischil Jul 12 '13 at 10:30

----------

http://stackoverflow.com/questions/2769814/how-do-i-use-try-catch-to-catch-floating-point-errors/10895180#10895180

----------

ISO C99 defines functions to query and manipulate the floating-point status word. You can use these functions to check for untrapped exceptions when it's convenient, rather than worrying about them in the middle of a calculation.

It provides

FE_INEXACT
FE_DIVBYZERO
FE_UNDERFLOW
FE_OVERFLOW
FE_INVALID

For example

   {
       double f;
       int raised;
       feclearexcept (FE_ALL_EXCEPT);
       f = compute ();
       raised = fetestexcept (FE_OVERFLOW | FE_INVALID);
       if (raised & FE_OVERFLOW) { /* ... */ }
       if (raised & FE_INVALID) { /* ... */ }
       /* ... */
     }

http://www.gnu.org/software/libc/manual/html_node/Status-bit-operations.html
